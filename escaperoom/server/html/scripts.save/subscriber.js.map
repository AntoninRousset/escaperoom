{
  "version": 3,
  "file": "subscriber.js",
  "sourceRoot": "",
  "sources": [
    "subscriber.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "export is_empty = (obj) ->\n\tfor key of obj\n\t\treturn false\n\treturn true\n\nexport post_control = (loc, data) ->\n\tresponse = await fetch(loc, {\n\t\theaders: {'Content-Type': 'application/json'},\n\t\tbody: JSON.stringify(data),\n\t\tmethod: 'POST'\n\t})\n\tdatas = await response.json()\n\tif datas.state == 'failed'\n\t\tif datas.reason?\n\t\t\tthrow 'failed to post control: '+datas.reason\n\t\telse\n\t\t\tthrow 'failed to post control'\n\tdatas.data\n\nclass Templated extends HTMLElement\n\tconstructor: () ->\n\t\tsuper()\n\t\t@template = @querySelector('template')\n\t\tif @template?\n\t\t\tslots = @template.content.querySelectorAll('slot')\n\t\t\t@slots = (slot.getAttribute('name') for slot in slots)\n\n\tapply_template: (node=this) ->\n\t\tif @template.hasAttribute('class')\n\t\t\tnode.setAttribute('class', @template.getAttribute('class'))\n\t\tfor slot in @slots\n\t\t\tnode.appendChild(@create_plug(slot))\n\t\tnode.attachShadow({mode: 'open'})\n\t\tnode.shadowRoot.appendChild(@template.content.cloneNode(true))\n\t\tnode\n\n\tcreate_plug: (slot) ->\n\t\tspan = document.createElement('span')\n\t\tspan.setAttribute('slot', slot)\n\t\tspan\n\n\tupdate_plugs: (data, node=this) ->\n\t\tfor slot in @slots\n\t\t\t@update_plug(slot, data, node)\n\n\tupdate_plug: (slot, data, node) ->\n\t\tnode = node.querySelector('[slot='+slot+']')\n\t\tnode.textContent = data[slot]\n\n\tset_screen: (name, node=this) ->\n\t\tfor screen in node.shadowRoot.querySelectorAll('.screen')\n\t\t\tif screen.getAttribute('name') is name\n\t\t\t\tscreen.removeAttribute('hidden')\n\t\t\telse\n\t\t\t\tscreen.setAttribute('hidden', '')\n\n\thas_screen: (name, node=this) ->\n\t\tif not node.shadowRoot?\n\t\t\treturn false\n\t\tnode.shadowRoot.querySelector('.screen[name=\"'+name+'\"]')?\n\n\tget_screen: (node=this) ->\n\t\t@shadowRoot.querySelector('.screen:not([hidden])')\n\n\nexport class Subscriber extends Templated\n\tevent_source = null\n\tsubscribers = []\n\n\tconstructor: () ->\n\t\tsuper()\n\t\t@loc = ''\n\t\t\t\t\n\tevent_handler = (event) ->\n\t\tdata = JSON.parse(event.data)\n\t\tfor subscriber in subscribers\n\t\t\tif data['type'] == 'update'\n\t\t\t\tloc = data['url']\n\t\t\t\tif 'id' of data\n\t\t\t\t\tloc = loc+'?id='+data['id']\n\t\t\t\tif subscriber.loc == loc\n\t\t\t\t\tsubscriber.sync()\n\n\tsubscribe: (query_str='', path=null) ->\n\t\tif path?\n\t\t\tpath = @setAttribute('src', path)\n\t\telse\n\t\t\tpath = @getAttribute('src')\n\t\t@unsubscribe()\n\t\t@loc = path+query_str\n\t\tevent_path = path.substring(0, path.lastIndexOf('/'))+'/events'\n\t\tif not event_source?\n\t\t\tevent_source = new EventSource(event_path)\n\t\tsubscribers.push(this)\n\t\tevent_source.onmessage = event_handler\n\t\t@sync()\n\n\tsync: () =>\n\t\tnow = new Date()\n\t\t@now = now\n\t\tloading_timeout = setTimeout(@onloading, 1000)\n\t\tresponse = await fetch(@loc)\n\t\tdata = await response.json()\n\t\tclearTimeout(loading_timeout)\n\t\tif now is @now\n\t\t\t@update(data)\n\n\tonloading: (promise) =>\n\t\tif @has_screen('loading')\n\t\t\t@set_screen('loading')\n\n\tonerror: () =>\n\t\tif @has_screen('error')\n\t\t\t@set_screen('error')\n\n\tunsubscribe: () ->\n\t\tfor i, subscriber of subscribers\n\t\t\tif this is subscriber\n\t\t\t\tsubscribers.splice(i, 1)\n\n\tupdate: (datas) ->\n\t\t@update_plugs(datas)\n\n\nexport class Container extends Templated\n\tconstructor: () ->\n\t\tsuper()\n\t\t\n\tcreate_item: (id, type='div') ->\n\t\titem = document.createElement(type)\n\t\titem.setAttribute('item_id', id)\n\t\t@apply_template(item)\n\n\tupdate_item: (id, data) ->\n\t\titem = @get_item(id)\n\t\t@update_plugs(data, item)\n\n\tread_items: (datas) ->\n\t\tfor id in @items_ids()\n\t\t\tif id not of datas\n\t\t\t\t@remove_item(id)\n\t\tfor id, data of datas\n\t\t\tif id not in @items_ids()\n\t\t\t\t@add_item(id, data)\n\t\t\t@update_item(id, data)\n\t\tif @onupdated?\n\t\t\t@onupdated(datas)\n\t\tif is_empty(datas) and @onempty?\n\t\t\t@onempty()\n\n\titems_ids: () ->\n\t\titems = @querySelectorAll('.item:not(template)')\n\t\t(item.getAttribute('item_id') for item in items)\n\n\tget_item: (id) ->\n\t\tselector = '.item[item_id=\"'+id+'\"]:not(template)'\n\t\t@querySelector(selector)\n\n\tremove_item: (id) ->\n\t\t@get_item(id).remove()\n\n"
  ]
}