{
  "version": 3,
  "file": "tab.js",
  "sourceRoot": "",
  "sources": [
    "tab.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import {FetchedElement, fetch_data} from './fetch.js'\n\n\nclass TabNav extends FetchedElement\n\n  constructor: () ->\n\n    super('interface/tabs', 'json')\n\n    # set default class\n    @classList.add('loadable')\n\n    # set loading mode by default\n    @setAttribute('loading', '')\n\n    window.addEventListener('hashchange', @select_from_hash)\n\n  connectedCallback: () =>\n\n    super.connectedCallback()\n\n    ## create loading screen\n    #cls = customElements.get('loading-animation')\n    #@appendChild(new cls())\n\n    ## create content screen\n    content = document.createElement('div')\n    content.classList.add('content')\n    @appendChild(content)\n\n    @load_from(@src)\n\n  onnewdata: (data) =>\n\n    main_screen = @get_screen('main')\n    main_screen.innerHTML = ''\n\n    for group in data\n\n      group_div = document.createElement('div')\n      group_h1 = document.createElement('h1')\n      group_h1.innerText = group.name\n      group_div.appendChild(group_h1)\n\n      # TODO all svg could be fetched in parallel\n      # TODO add svg data_type in fetch_data\n\n      for tab in group.tabs\n\n        a = document.createElement('a')\n        a.href = '#' + tab.id\n\n        # add svg icon\n        svg = await fetch_data(tab.icon, 'html')\n        svg = svg.querySelector('svg')\n        a.appendChild(svg)\n\n        # add title\n        p = document.createElement('p')\n        p.textContent = tab.name\n        a.appendChild(p)\n\n        group_div.appendChild(a)\n\n      main_screen.appendChild(group_div)\n      @set_screen('main')\n\n      @select_from_hash()\n\n  select_from_hash: () =>\n    @select(location.hash.substr(1))\n\n  select: (tab_id) =>\n\n    # remove all selected\n    for a in @querySelectorAll('a')\n      a.removeAttribute('selected')\n\n    a = @querySelector('a[href=\"#' + tab_id + '\"]')\n    if not a\n      tab_id = @querySelector('a').getAttribute('href').substr(1)\n      location.hash = tab_id\n    else\n      a.setAttribute('selected', '')\n\n\nclass TabContent extends FetchedElement\n\n  constructor: () ->\n\n    super()\n\n    window.addEventListener('hashchange', @select_from_hash)\n    window.addEventListener('load', @select_from_hash)\n\n    @get_screen('main').attachShadow({mode: 'open'})\n\n  select_from_hash: () =>\n    @select(location.hash.substr(1))\n\n  select: (tab_id) =>\n\n    if not tab_id\n      return\n\n    html = await fetch_data(\"interface/tab/#{tab_id}\", 'text')\n\n    main_screen = @get_screen('main')\n    main_screen.shadowRoot.innerHTML = html\n    @set_screen('main')\n\n\ncustomElements.define('tab-nav', TabNav)\ncustomElements.define('tab-content', TabContent)\n"
  ]
}