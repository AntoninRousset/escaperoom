// Generated by CoffeeScript 2.3.2
var CluesBox, CluesList,
  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };

import {
  Subscriber,
  Container
} from './monitor.js';

import {
  is_empty,
  post_control
} from './monitor.js';

CluesBox = class CluesBox extends Subscriber {
  constructor() {
    super();
    this.send_clue = this.send_clue.bind(this);
    this.apply_template();
    this.shadowRoot.querySelector('button').onclick = this.send_clue;
    this.clues_list = this.shadowRoot.querySelector('ul');
    this.subscribe();
    this.textarea = this.shadowRoot.querySelector('textarea');
    this.length_warning = 6;
    this.textarea.oninput = (event) => {
      if (this.length_warning > 0 && this.textarea.value.length >= this.length_warning) {
        return this.textarea.classList.add('length-warning');
      } else {
        return this.textarea.classList.remove('length-warning');
      }
    };
  }

  update(datas) {
    this.update_plugs(datas);
    this.clues_list.read_items(datas.messages);
    return this.length_warning = datas.length_warning;
  }

  send_clue(event) {
    var text;
    boundMethodCheck(this, CluesBox);
    text = event.target.parentNode.querySelector('textarea').value;
    return post_control('/display', {
      action: 'clue',
      text: text
    });
  }

};

customElements.define('clues-box', CluesBox);

CluesList = class CluesList extends Container {
  read_items(datas) {
    var id, msg, results;
    this.innerHTML = '';
    this.textarea = this.parentNode.querySelector('textarea');
    results = [];
    for (id in datas) {
      msg = datas[id];
      results.push(this.add_item(id, msg));
    }
    return results;
  }

  add_item(id, msg) {
    var li;
    li = document.createElement('li');
    li.innerText = msg;
    li.onclick = (event) => {
      return this.textarea.value = event.originalTarget.innerText;
    };
    return this.appendChild(li);
  }

};

customElements.define('clues-list', CluesList);
