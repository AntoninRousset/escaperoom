<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<title>Streamer</title>
	</head>
	<body> 
		<script> 
			let pc = create_pc();
			let ws = new WebSocket('ws://127.0.0.1:8080/time/camera');
			ws.onopen = () => {
				ws.send(JSON.stringify({
					type: 'login',
					name: 'streamer'
				}));
			};
			ws.onmessage = msg => {
				const data = JSON.parse(msg.data);
				switch(data.type) {
					case 'video-offer':
						console.log('offer received');
						handleVideoOfferMsg(data);
						break;
					case 'new-ice-candidate':
						handleNewIceCandidate(data);
						break;
				}
			}

			function handleVideoOfferMsg(msg) {
				var desc = new RTCSessionDescription(msg.sdp);
				pc.setRemoteDescription(desc)
					.then(function() {
						console.log('remote desc set');
						return navigator.mediaDevices.getUserMedia({video: true});
					}).then(function(stream) {
						stream.getTracks().forEach(t => pc.addTrack(t, stream));
						console.log('tracks added to peer connection');
					}).then(function() {
						return pc.createAnswer();
					}).then(function(answer) {
						console.log('offer\'s answer created');
						return pc.setLocalDescription(answer);
					}).then(function() {
						console.log('local desc set');
						ws.send(JSON.stringify({
							type: 'video-answer',
							sdp: pc.localDescription
						}));
						console.log('video answer sent');
					}).catch(console.error);
			}

			function create_pc() {
				connection = new RTCPeerConnection()
				connection.onicecandidate = handleICECandidateEvent;
				//connection.onnegotiationneeded = handleNegotiationNeededEvent;
				connection.ontrack = handleTrackEvent;
				return connection;
			}

			function handleNegotiationNeededEvent() {
				console.log('nego needed...');
			}

			function handleICECandidateEvent(event) {
				if (event.candidate) {
					ws.send(JSON.stringify({
						type: 'new-ice-candidate',
						target: 'receiver',
						candidate: event.candidate
					}));
					console.log('ice candidate sent');
				};
			}

			function handleNewIceCandidate(msg) {
				var candidate = new RTCIceCandidate(msg.candidate);
				pc.addIceCandidate(candidate)
					.catch(console.error);
				console.log('new ICE candidate msg')
			}

			function handleTrackEvent(event) {
				console.log('got track');
			}
		</script>
	</body>
</html>
